#ifndef GCT_SHADER_SPHERE_H
#define GCT_SHADER_SPHERE_H

const uint sphere_vertex_count = 63;
vec3 sphere_vertex[ sphere_vertex_count ] = vec3[](
vec3( 0, -1, -0),
vec3( 0, -1, -0),
vec3( 0, -1, -0),
vec3( 0, -1, -0),
vec3( 0, -1, -0),
vec3( 0.723607, -0.44722, 0.525725),
vec3( -0.276388, -0.44722, 0.850649),
vec3( -0.276388, -0.44722, 0.850649),
vec3( -0.894426, -0.447216, -0),
vec3( -0.276388, -0.44722, -0.850649),
vec3( 0.723607, -0.44722, -0.525725),
vec3( 0.276388, 0.44722, 0.850649),
vec3( -0.723607, 0.44722, 0.525725),
vec3( -0.723607, 0.44722, 0.525725),
vec3( -0.723607, 0.44722, -0.525725),
vec3( 0.276388, 0.44722, -0.850649),
vec3( 0.894426, 0.447216, -0),
vec3( 0, 1, -0),
vec3( 0, 1, -0),
vec3( 0, 1, -0),
vec3( 0, 1, -0),
vec3( 0, 1, -0),
vec3( -0.162456, -0.850654, 0.499995),
vec3( -0.162456, -0.850654, 0.499995),
vec3( 0.425323, -0.850654, 0.309011),
vec3( 0.425323, -0.850654, 0.309011),
vec3( 0.262869, -0.525738, 0.809012),
vec3( 0.850648, -0.525736, -0),
vec3( 0.425323, -0.850654, -0.309011),
vec3( 0.425323, -0.850654, -0.309011),
vec3( -0.52573, -0.850652, -0),
vec3( -0.52573, -0.850652, -0),
vec3( -0.688189, -0.525736, 0.499997),
vec3( -0.162456, -0.850654, -0.499995),
vec3( -0.162456, -0.850654, -0.499995),
vec3( -0.688189, -0.525736, -0.499997),
vec3( 0.262869, -0.525738, -0.809012),
vec3( 0.951058, 0, 0.309013),
vec3( 0.951058, 0, -0.309013),
vec3( 0, 0, 1),
vec3( 0.587786, 0, 0.809017),
vec3( -0.951058, 0, 0.309013),
vec3( -0.587786, 0, 0.809017),
vec3( -0.587786, 0, 0.809017),
vec3( -0.587786, 0, -0.809017),
vec3( -0.951058, 0, -0.309013),
vec3( 0.587786, 0, -0.809017),
vec3( 0, 0, -1),
vec3( 0.688189, 0.525736, 0.499997),
vec3( -0.262869, 0.525738, 0.809012),
vec3( -0.850648, 0.525736, -0),
vec3( -0.262869, 0.525738, -0.809012),
vec3( 0.688189, 0.525736, -0.499997),
vec3( 0.162456, 0.850654, 0.499995),
vec3( 0.162456, 0.850654, 0.499995),
vec3( 0.52573, 0.850652, -0),
vec3( 0.52573, 0.850652, -0),
vec3( -0.425323, 0.850654, 0.309011),
vec3( -0.425323, 0.850654, 0.309011),
vec3( -0.425323, 0.850654, -0.309011),
vec3( -0.425323, 0.850654, -0.309011),
vec3( 0.162456, 0.850654, -0.499995),
vec3( 0.162456, 0.850654, -0.499995)
);

const uint sphere_index_count = 80;
const uvec3 sphere_index[ sphere_index_count ] = uvec3[](
uvec3( 0, 24, 22),
uvec3( 5, 25, 27),
uvec3( 4, 23, 31),
uvec3( 3, 30, 34),
uvec3( 2, 33, 29),
uvec3( 5, 27, 37),
uvec3( 6, 26, 39),
uvec3( 8, 32, 41),
uvec3( 9, 35, 44),
uvec3( 10, 36, 46),
uvec3( 5, 37, 40),
uvec3( 6, 39, 42),
uvec3( 8, 41, 45),
uvec3( 9, 44, 47),
uvec3( 10, 46, 38),
uvec3( 11, 48, 54),
uvec3( 12, 49, 57),
uvec3( 14, 50, 60),
uvec3( 15, 51, 62),
uvec3( 16, 52, 56),
uvec3( 56, 61, 19),
uvec3( 56, 52, 61),
uvec3( 52, 15, 61),
uvec3( 62, 59, 20),
uvec3( 62, 51, 59),
uvec3( 51, 14, 59),
uvec3( 60, 58, 21),
uvec3( 60, 50, 58),
uvec3( 50, 13, 58),
uvec3( 57, 53, 17),
uvec3( 57, 49, 53),
uvec3( 49, 11, 53),
uvec3( 54, 55, 18),
uvec3( 54, 48, 55),
uvec3( 48, 16, 55),
uvec3( 38, 52, 16),
uvec3( 38, 46, 52),
uvec3( 46, 15, 52),
uvec3( 47, 51, 15),
uvec3( 47, 44, 51),
uvec3( 44, 14, 51),
uvec3( 45, 50, 14),
uvec3( 45, 41, 50),
uvec3( 41, 13, 50),
uvec3( 42, 49, 12),
uvec3( 42, 39, 49),
uvec3( 39, 11, 49),
uvec3( 40, 48, 11),
uvec3( 40, 37, 48),
uvec3( 37, 16, 48),
uvec3( 46, 47, 15),
uvec3( 46, 36, 47),
uvec3( 36, 9, 47),
uvec3( 44, 45, 14),
uvec3( 44, 35, 45),
uvec3( 35, 8, 45),
uvec3( 41, 43, 13),
uvec3( 41, 32, 43),
uvec3( 32, 7, 43),
uvec3( 39, 40, 11),
uvec3( 39, 26, 40),
uvec3( 26, 5, 40),
uvec3( 37, 38, 16),
uvec3( 37, 27, 38),
uvec3( 27, 10, 38),
uvec3( 29, 36, 10),
uvec3( 29, 33, 36),
uvec3( 33, 9, 36),
uvec3( 34, 35, 9),
uvec3( 34, 30, 35),
uvec3( 30, 8, 35),
uvec3( 31, 32, 8),
uvec3( 31, 23, 32),
uvec3( 23, 7, 32),
uvec3( 27, 28, 10),
uvec3( 27, 25, 28),
uvec3( 25, 1, 28),
uvec3( 22, 26, 6),
uvec3( 22, 24, 26),
uvec3( 24, 5, 26)
);

#endif

