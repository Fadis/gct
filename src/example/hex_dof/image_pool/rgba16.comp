#version 460

#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable
#extension GL_EXT_nonuniform_qualifier : enable

#include "scene_graph.h"
#include "global_uniforms.h"

layout(local_size_x = 16, local_size_y = 16 ) in;

layout(push_constant) uniform PushConstants {
  uint from;
  uint to;
  float gamma;
  uint oetf;
  uint csmat;
} push_constants;

float gamma( float v, float f ) {
  return pow( (v+0.055)/(1+0.055), f );
}

void main() {
  const ivec2 image_pos = ivec2( gl_GlobalInvocationID.xy );
  const vec4 non_linear = imageLoad( image_pool16[ push_constants.from ], image_pos );
  const vec4 linear_rgb = vec4(
    gamma( non_linear.r, push_constants.gamma ),
    gamma( non_linear.g, push_constants.gamma ),
    gamma( non_linear.b, push_constants.gamma ),
    non_linear.a
  );
  const vec4 linear_xyz = matrix_pool[ push_constants.csmat ] * linear_rgb;
  imageStore( image_pool16f[ push_constants.to ], image_pos, linear_xyz );
}

