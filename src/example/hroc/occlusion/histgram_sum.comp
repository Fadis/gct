#version 460

#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable
#extension GL_KHR_shader_subgroup_arithmetic : enable

layout(local_size_x = 256, local_size_y = 4 ) in;

layout(std430, binding = 4) buffer Histgram {
  uint histgram[ 4 * 256 ];
};

shared uint[ 32 ] subgroup_offset;

void main() {
  const uint index = gl_GlobalInvocationID.x;
  const uint digit = gl_GlobalInvocationID.y;
  uint value = histgram[ index + 256 * digit ];
  uint subgroup_pos = subgroupInclusiveAdd( value );
  if( gl_SubgroupInvocationID == gl_SubgroupSize - 1 ) {
    subgroup_offset[ gl_SubgroupID ] = subgroup_pos;
  }
  barrier();
  if( gl_SubgroupID < 4 ) {
    uint v =
      subgroupInclusiveAdd(
        gl_SubgroupInvocationID < 8 ?
        subgroup_offset[ gl_SubgroupInvocationID + gl_SubgroupID * 8 ] : 
        0
      );
    if( gl_SubgroupInvocationID < 8 ) {
      subgroup_offset[
        gl_SubgroupInvocationID + gl_SubgroupID * 8
      ] = v;
    }
  }
  barrier();
  uint subgroup_offset_ = 0;
  if( ( gl_SubgroupID & 0x7 ) != 0 ) {
    subgroup_offset_ = subgroup_offset[ gl_SubgroupID - 1 ];
  }
  histgram[ index + 256 * digit ] =
    subgroup_pos +
    subgroup_offset_;
}

