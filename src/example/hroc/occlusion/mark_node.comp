#version 460

#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable
#extension GL_KHR_shader_subgroup_arithmetic : enable

layout(local_size_x = 1024, local_size_y = 1 ) in;

layout(push_constant) uniform PushConstants {
  uint src_count;
  uint src_offset;
  uint dest_count;
  uint dest_offset;
} push_constants;

struct aabb_type {
  vec4 min;
  vec4 max;
};

const uint null_node = 0xFFFFFFFF;

struct node_type {
  aabb_type aabb;
  uint parent;
  uint left;
  uint right;
  uint leaf;
};

layout(std430, binding = 8) buffer BVH {
  node_type bvh[];
};

layout(std430, binding = 9) buffer Visibility {
  uint visibility[];
};

void main() {
  const uint index = gl_GlobalInvocationID.x;
  if( index < push_constants.dest_count ) {
    uint output_index = push_constants.dest_offset + index;
    uint left_index = bvh[ output_index ].left;
    uint right_index = bvh[ output_index ].right;
    const uint left_v = visibility[ left_index ];
    if( right_index != null_node ) {
      const uint right_v = visibility[ right_index ];
      visibility[ output_index ] = left_v + right_v;
    }
    else {
      visibility[ output_index ] = left_v;
    }
  }
}

