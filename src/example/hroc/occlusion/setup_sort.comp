#version 460

#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable
#extension GL_KHR_shader_subgroup_arithmetic : enable

layout(local_size_x = 1024, local_size_y = 1 ) in;

#include "scene_graph.h"

struct key_value {
  uint key;
  uint value;
};

layout(std430, binding = 7) buffer SortInput {
  key_value sort_input[];
};


uint encode_pos( aabb_type v ) {
  uvec3 temp = uvec3(
    ( v.min.x + v.max.x ) * 5.0 + 512.0,
    ( v.min.y + v.max.z ) * 5.0 + 512.0,
    ( v.min.y + v.max.z ) * 5.0 + 512.0
  );
  temp.x &= 0x3FF;
  temp.y &= 0x3FF;
  temp.z &= 0x3FF;
  return
    ( temp.x << 20 ) |
    ( temp.y << 10 ) |
    temp.z;
}

void main() {
  const uint index = gl_GlobalInvocationID.x;
  if( index < push_constants.src_count ) {
    const aabb_type aabb = aabb_pool[ instance_resource_index[ resource_pair[ index ].inst ].aabb ];
    sort_input[ index ].key = encode_pos( aabb );
    sort_input[ index ].value = resource_pair[ index ].inst;
  }
}


