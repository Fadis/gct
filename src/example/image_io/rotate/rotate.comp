#version 450

#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable
#extension GL_EXT_nonuniform_qualifier : enable

layout(local_size_x = 16, local_size_y = 16 ) in;

#include <gct/constants.h>
#include <gct/global_uniforms.h>
#include <gct/lighting.h>
#include <gct/scene_graph/image_pool.h>
#include <gct/scene_graph/texture_pool.h>

layout(push_constant) uniform PushConstants {
  uint input_image;
  uint output_image;
} push_constants;

void main()  {
  const ivec2 screen_pos = ivec2( gl_GlobalInvocationID.xy );
  const vec2 local_texcoord = ( vec2( screen_pos ) + vec2( 0.5, 0.5 ) ) /
    vec2( imageSize( image_pool32f[ nonuniformEXT( push_constants.output_image ) ] ) );
  const vec2 texcoord = mat2(
    cos( 0.1 ), -sin( 0.1 ),
    sin( 0.1 ), cos( 0.1 )
  ) * local_texcoord;
  vec4 p = texture( texture_pool[ nonuniformEXT( push_constants.input_image ) ], texcoord );
  imageStore( image_pool32f[ nonuniformEXT( push_constants.output_image ) ], screen_pos, p );
}

