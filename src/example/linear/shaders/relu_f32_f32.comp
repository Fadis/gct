#version 450

#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_arithmetic : enable
#extension GL_KHR_memory_scope_semantics : enable

layout(local_size_x = 1024, local_size_y = 1, local_size_z = 1 ) in;
layout(std430, binding = 0) buffer input_vector {
  float input_data[];
};
layout(std430, binding = 1) buffer output_vector {
  float output_data[];
};
layout(constant_id = 1) const uint input_length = 32;

void main() {
  const uint index =
    gl_GlobalInvocationID.x +
    gl_NumWorkGroups.x * gl_WorkGroupSize.x * gl_GlobalInvocationID.y +
    gl_NumWorkGroups.x * gl_WorkGroupSize.x * gl_NumWorkGroups.y * gl_WorkGroupSize.y * gl_GlobalInvocationID.z;
  if( index >= input_length ) return;
  float v = input_data[ index ];
  output_data[ index ] = ( v >= 0.0 ) ? v : 0.0;
}

