#version 460

#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_arithmetic : enable
#extension GL_EXT_nonuniform_qualifier : enable
#extension GL_EXT_shader_image_load_formatted : enable

#define GCT_USE_IMAGE_POOL_WITHOUT_FORMAT

layout(local_size_x = 16, local_size_y = 16 ) in;

#include <gct/global_uniforms.h>
#include <gct/scene_graph/image_pool.h>

layout(push_constant) uniform PushConstants {
  uint partial0;
  uint partial45;
  uint partial90;
  uint partial135;
  uint dest;
} push_constants;

void main() {
  const ivec2 screen_pos = ivec2( gl_GlobalInvocationID.xy );
  const float h0 = imageLoad( image_pool_2d[ nonuniformEXT( push_constants.partial0 ) ], screen_pos ).r;
  const float h45 = imageLoad( image_pool_2d[ nonuniformEXT( push_constants.partial45 ) ], screen_pos ).r;
  const float h90 = imageLoad( image_pool_2d[ nonuniformEXT( push_constants.partial90 ) ], screen_pos ).r;
  const float h135 = imageLoad( image_pool_2d[ nonuniformEXT( push_constants.partial135 ) ], screen_pos ).r;
  const float visibility = h0 * h90 * h45 * h135;
  imageStore( image_pool_2d[ nonuniformEXT( push_constants.dest ) ], screen_pos, vec4( visibility, 1.0, 0.0, 1.0 ) );
}

