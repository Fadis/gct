#version 460

#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable
#extension GL_KHR_shader_subgroup_arithmetic : enable

layout(local_size_x = 1024, local_size_y = 1 ) in;

layout(std430, binding = 2) buffer WorkGroupOffset {
  uint workgroup_offset[];
};

shared uint[32] subgroup_offset;

void main() {
  const uint index = gl_GlobalInvocationID.x;
  uint value = workgroup_offset[ index ];
  uint subgroup_pos = subgroupInclusiveAdd( value );
  if( gl_SubgroupInvocationID == gl_SubgroupSize - 1 ) {
    subgroup_offset[ gl_SubgroupID ] = subgroup_pos;
  }
  barrier();
  if( gl_SubgroupID == 0 ) {
    subgroup_offset[ gl_SubgroupInvocationID ] = subgroupInclusiveAdd( subgroup_offset[ gl_SubgroupInvocationID ] );
  }
  barrier();
  uint subgroup_offset_ = 0;
  if( gl_SubgroupID != 0 ) {
    subgroup_offset_ = subgroup_offset[ gl_SubgroupID - 1 ];
  }
  workgroup_offset[ index ] =
    subgroup_pos +
    subgroup_offset_;
}

