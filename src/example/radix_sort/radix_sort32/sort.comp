#version 460

#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable
#extension GL_KHR_shader_subgroup_arithmetic : enable

layout(local_size_x = 1024, local_size_y = 1 ) in;

layout(push_constant) uniform PushConstants {
  uint n;
  uint digit;
} push_constants;

struct key_value {
  uint key;
  uint value;
};

layout(std430, binding = 0) buffer Input {
  key_value input_data[];
};

layout(std430, binding = 1) buffer LocalOffset {
  uint local_offset[];
};

layout(std430, binding = 2) buffer WorkGroupOffset {
  uint workgroup_offset[];
};

layout(std430, binding = 3) buffer Output {
  key_value output_data[];
};

void main() {
  const uint index = gl_GlobalInvocationID.x;
  uint value = 0;
  uint digit = push_constants.digit;
  if( index < push_constants.n ) {
    value = 1 - ( ( input_data[ index ].key >> digit ) & 0x1 );
  }

  const uint offset =
    ( ( gl_WorkGroupID.x == 0 ) ? 0 : workgroup_offset[ gl_WorkGroupID.x - 1 ] ) +
    local_offset[ index ];

  const uint sep = workgroup_offset[ gl_NumWorkGroups.x - 1 ];

  if( index < push_constants.n ) {
    if( value == 0 ) {
      output_data[ index - offset + sep ] = input_data[ index ];
    }
    else {
      output_data[ offset ] = input_data[ index ];
    }
  }
}

