#include <gct/format.hpp>

namespace gct {
  numeric_component_type_t format_to_component_type( vk::Format format ) {
    if( format == vk::Format::eR8Unorm) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR8Snorm) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR8Uscaled) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR8Sscaled) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR8Uint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR8Sint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR8Srgb) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR8G8Unorm) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR8G8Snorm) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR8G8Uscaled) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR8G8Sscaled) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR8G8Uint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR8G8Sint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR8G8Srgb) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR8G8B8Unorm) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR8G8B8Snorm) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR8G8B8Uscaled) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR8G8B8Sscaled) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR8G8B8Uint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR8G8B8Sint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR8G8B8Srgb) return numeric_component_type_t::int_;
    else if( format == vk::Format::eB8G8R8Unorm) return numeric_component_type_t::int_;
    else if( format == vk::Format::eB8G8R8Snorm) return numeric_component_type_t::int_;
    else if( format == vk::Format::eB8G8R8Uscaled) return numeric_component_type_t::int_;
    else if( format == vk::Format::eB8G8R8Sscaled) return numeric_component_type_t::int_;
    else if( format == vk::Format::eB8G8R8Uint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eB8G8R8Sint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eB8G8R8Srgb) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR8G8B8A8Unorm) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR8G8B8A8Snorm) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR8G8B8A8Uscaled) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR8G8B8A8Sscaled) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR8G8B8A8Uint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR8G8B8A8Sint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR8G8B8A8Srgb) return numeric_component_type_t::int_;
    else if( format == vk::Format::eB8G8R8A8Unorm) return numeric_component_type_t::int_;
    else if( format == vk::Format::eB8G8R8A8Snorm) return numeric_component_type_t::int_;
    else if( format == vk::Format::eB8G8R8A8Uscaled) return numeric_component_type_t::int_;
    else if( format == vk::Format::eB8G8R8A8Sscaled) return numeric_component_type_t::int_;
    else if( format == vk::Format::eB8G8R8A8Uint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eB8G8R8A8Sint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eB8G8R8A8Srgb) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR16Unorm) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR16Snorm) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR16Uscaled) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR16Sscaled) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR16Uint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR16Sint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR16Sfloat) return numeric_component_type_t::float_;
    else if( format == vk::Format::eR16G16Unorm) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR16G16Snorm) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR16G16Uscaled) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR16G16Sscaled) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR16G16Uint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR16G16Sint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR16G16Sfloat) return numeric_component_type_t::float_;
    else if( format == vk::Format::eR16G16B16Unorm) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR16G16B16Snorm) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR16G16B16Uscaled) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR16G16B16Sscaled) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR16G16B16Uint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR16G16B16Sint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR16G16B16Sfloat) return numeric_component_type_t::float_;
    else if( format == vk::Format::eR16G16B16A16Unorm) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR16G16B16A16Snorm) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR16G16B16A16Uscaled) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR16G16B16A16Sscaled) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR16G16B16A16Uint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR16G16B16A16Sint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR16G16B16A16Sfloat) return numeric_component_type_t::float_;
    else if( format == vk::Format::eR32Uint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR32Sint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR32Sfloat) return numeric_component_type_t::float_;
    else if( format == vk::Format::eR32G32Uint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR32G32Sint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR32G32Sfloat) return numeric_component_type_t::float_;
    else if( format == vk::Format::eR32G32B32Uint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR32G32B32Sint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR32G32B32Sfloat) return numeric_component_type_t::float_;
    else if( format == vk::Format::eR32G32B32A32Uint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR32G32B32A32Sint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR32G32B32A32Sfloat) return numeric_component_type_t::float_;
    else if( format == vk::Format::eR64Uint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR64Sint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR64Sfloat) return numeric_component_type_t::float_;
    else if( format == vk::Format::eR64G64Uint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR64G64Sint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR64G64Sfloat) return numeric_component_type_t::float_;
    else if( format == vk::Format::eR64G64B64Uint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR64G64B64Sint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR64G64B64Sfloat) return numeric_component_type_t::float_;
    else if( format == vk::Format::eR64G64B64A64Uint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR64G64B64A64Sint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eR64G64B64A64Sfloat) return numeric_component_type_t::float_;
    else if( format == vk::Format::eD16Unorm) return numeric_component_type_t::int_;
    else if( format == vk::Format::eD32Sfloat) return numeric_component_type_t::float_;
    else if( format == vk::Format::eS8Uint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eD16UnormS8Uint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eD24UnormS8Uint) return numeric_component_type_t::int_;
    else if( format == vk::Format::eD32SfloatS8Uint) return numeric_component_type_t::float_;
    else return numeric_component_type_t::void_;
  }
}
