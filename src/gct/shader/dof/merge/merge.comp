#version 450

#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable
#extension GL_EXT_nonuniform_qualifier : enable
#extension GL_EXT_shader_image_load_formatted : enable

#define GCT_USE_IMAGE_POOL_WITHOUT_FORMAT

#include <gct/global_uniforms.h>
#include <gct/constants.h>
#include <gct/scene_graph/matrix_pool.h>
#include <gct/scene_graph/image_pool.h>
#include <gct/scene_graph/texture_pool.h>
#include <gct/sky.h>
#include <gct/scene_graph/k+buffer.h>

layout(push_constant) uniform PushConstants {
  uint src;
  uint dest;
  uint skyview;
} push_constants;

layout(local_size_x = 16, local_size_y = 16 ) in;

void main()  {
  const ivec2 screen_pos = ivec2( gl_GlobalInvocationID.xy );
  const ivec2 image_size = imageSize( image_pool_2d[ nonuniformEXT( push_constants.dest ) ] ).xy;

  vec4 near = max(
    imageLoad( image_pool_2d_array[ nonuniformEXT( push_constants.src ) ], ivec3( screen_pos, 0 ) ),
    vec4( 0.0, 0.0, 0.0, 0.0 )
  );

  vec4 far = ( near.a < 1.0 ) ? max(
    imageLoad( image_pool_2d_array[ nonuniformEXT( push_constants.src ) ], ivec3( screen_pos, 1 ) ),
    vec4( 0.0, 0.0, 0.0, 0.0 )
  ) : vec4( 0.0, 0.0, 0.0, 0.0 );

  vec3 total = vec3( 0.0, 0.0, 0.0 );
  if( near.a  < 1.0 && far.a < 1.0 ) {
    vec4 pos_in_screen = vec4( vec2( screen_pos )/vec2( image_size ) * 2.0 - 1.0, 0.0, 1.0 );
    vec4 pos = matrix_pool[ global_uniforms.screen_to_world_matrix ] * pos_in_screen;
    pos /= pos.w;
    pos_in_screen /= pos_in_screen.w;
    const vec3 pos_in_froxel = pos_in_screen.xyz * 0.5 + 0.5;
    
    const vec3 eye_dir = normalize( pos.xyz - global_uniforms.eye_pos.xyz );
    const vec2 latitude_longitude = world_to_llar( eye_dir );
    const vec2 skyview_texcoord = vec2(
      ( latitude_longitude.y + pi ) / ( 2.0 * pi ),
      1.0 - skyview_latitude_to_texcoord( latitude_longitude.x )
    );
    total = texture( texture_pool[ nonuniformEXT( push_constants.skyview ) ], skyview_texcoord ).rgb;
  }
  total = mix( total, far.rgb, min( far.a * 3.0, 1.0 ) );
  total = mix( total, near.rgb, min( near.a * 1.0, 1.0 ) );
  
  imageStore( image_pool_2d[ nonuniformEXT( push_constants.dest ) ], screen_pos, vec4( total, 1.0 ) );
}

